	component Computer_System is
		port (
			accel_I2C_SDAT             : inout std_logic                     := 'X';             -- I2C_SDAT
			accel_I2C_SCLK             : out   std_logic;                                        -- I2C_SCLK
			accel_G_SENSOR_CS_N        : out   std_logic;                                        -- G_SENSOR_CS_N
			accel_G_SENSOR_INT         : in    std_logic                     := 'X';             -- G_SENSOR_INT
			arduino_gpio_in_port       : in    std_logic_vector(31 downto 0) := (others => 'X'); -- in_port
			arduino_gpio_out_port      : out   std_logic_vector(31 downto 0);                    -- out_port
			arduino_gpio_dir_export    : out   std_logic_vector(31 downto 0);                    -- export
			arduino_reset_n_export     : out   std_logic;                                        -- export
			gpio_a_in_port             : in    std_logic_vector(31 downto 0) := (others => 'X'); -- in_port
			gpio_a_out_port            : out   std_logic_vector(31 downto 0);                    -- out_port
			gpio_a_dir_export          : out   std_logic_vector(31 downto 0);                    -- export
			gpio_af_mux_a_export       : out   std_logic_vector(31 downto 0);                    -- export
			gpio_b_in_port             : in    std_logic_vector(31 downto 0) := (others => 'X'); -- in_port
			gpio_b_out_port            : out   std_logic_vector(31 downto 0);                    -- out_port
			gpio_b_dir_export          : out   std_logic_vector(31 downto 0);                    -- export
			hex3_hex0_export           : out   std_logic_vector(31 downto 0);                    -- export
			hex5_hex4_export           : out   std_logic_vector(15 downto 0);                    -- export
			leds_export                : out   std_logic_vector(9 downto 0);                     -- export
			master_reset_reset         : in    std_logic                     := 'X';             -- reset
			pushbuttons_export         : in    std_logic_vector(1 downto 0)  := (others => 'X'); -- export
			sdram_ba                   : out   std_logic_vector(1 downto 0);                     -- ba
			sdram_addr                 : out   std_logic_vector(12 downto 0);                    -- addr
			sdram_cas_n                : out   std_logic;                                        -- cas_n
			sdram_cke                  : out   std_logic;                                        -- cke
			sdram_cs_n                 : out   std_logic;                                        -- cs_n
			sdram_dq                   : inout std_logic_vector(15 downto 0) := (others => 'X'); -- dq
			sdram_dqm                  : out   std_logic_vector(1 downto 0);                     -- dqm
			sdram_ras_n                : out   std_logic;                                        -- ras_n
			sdram_we_n                 : out   std_logic;                                        -- we_n
			sdram_clk_clk              : out   std_logic;                                        -- clk
			slider_switches_export     : in    std_logic_vector(9 downto 0)  := (others => 'X'); -- export
			system_pll_ref_clk_clk     : in    std_logic                     := 'X';             -- clk
			system_pll_ref_reset_reset : in    std_logic                     := 'X';             -- reset
			uart0_RXD                  : in    std_logic                     := 'X';             -- RXD
			uart0_TXD                  : out   std_logic;                                        -- TXD
			vexriscv_core0_jtag_tms    : in    std_logic                     := 'X';             -- tms
			vexriscv_core0_jtag_tdi    : in    std_logic                     := 'X';             -- tdi
			vexriscv_core0_jtag_tdo    : out   std_logic;                                        -- tdo
			vexriscv_core0_jtag_tck    : in    std_logic                     := 'X';             -- tck
			vga_CLK                    : out   std_logic;                                        -- CLK
			vga_HS                     : out   std_logic;                                        -- HS
			vga_VS                     : out   std_logic;                                        -- VS
			vga_BLANK                  : out   std_logic;                                        -- BLANK
			vga_SYNC                   : out   std_logic;                                        -- SYNC
			vga_R                      : out   std_logic_vector(3 downto 0);                     -- R
			vga_G                      : out   std_logic_vector(3 downto 0);                     -- G
			vga_B                      : out   std_logic_vector(3 downto 0);                     -- B
			video_pll_ref_clk_clk      : in    std_logic                     := 'X';             -- clk
			video_pll_ref_reset_reset  : in    std_logic                     := 'X'              -- reset
		);
	end component Computer_System;

