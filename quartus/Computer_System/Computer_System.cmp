	component Computer_System is
		port (
			accelerometer_I2C_SDAT             : inout std_logic                     := 'X';             -- I2C_SDAT
			accelerometer_I2C_SCLK             : out   std_logic;                                        -- I2C_SCLK
			accelerometer_G_SENSOR_CS_N        : out   std_logic;                                        -- G_SENSOR_CS_N
			accelerometer_G_SENSOR_INT         : in    std_logic                     := 'X';             -- G_SENSOR_INT
			arduino_gpio_export                : inout std_logic_vector(15 downto 0) := (others => 'X'); -- export
			arduino_reset_n_export             : out   std_logic;                                        -- export
			expansion_jp1_0_export             : inout std_logic_vector(17 downto 0) := (others => 'X'); -- export
			expansion_jp1_1_export             : inout std_logic_vector(17 downto 0) := (others => 'X'); -- export
			hex3_hex0_export                   : out   std_logic_vector(31 downto 0);                    -- export
			hex5_hex4_export                   : out   std_logic_vector(15 downto 0);                    -- export
			leds_export                        : out   std_logic_vector(9 downto 0);                     -- export
			pushbuttons_export                 : in    std_logic_vector(1 downto 0)  := (others => 'X'); -- export
			reset_controller_0_reset_in0_reset : in    std_logic                     := 'X';             -- reset
			rs232_0_external_interface_RXD     : in    std_logic                     := 'X';             -- RXD
			rs232_0_external_interface_TXD     : out   std_logic;                                        -- TXD
			sdram_ba                           : out   std_logic_vector(1 downto 0);                     -- ba
			sdram_addr                         : out   std_logic_vector(12 downto 0);                    -- addr
			sdram_cas_n                        : out   std_logic;                                        -- cas_n
			sdram_cke                          : out   std_logic;                                        -- cke
			sdram_cs_n                         : out   std_logic;                                        -- cs_n
			sdram_dq                           : inout std_logic_vector(15 downto 0) := (others => 'X'); -- dq
			sdram_dqm                          : out   std_logic_vector(1 downto 0);                     -- dqm
			sdram_ras_n                        : out   std_logic;                                        -- ras_n
			sdram_we_n                         : out   std_logic;                                        -- we_n
			sdram_clk_clk                      : out   std_logic;                                        -- clk
			slider_switches_export             : in    std_logic_vector(9 downto 0)  := (others => 'X'); -- export
			system_pll_ref_clk_clk             : in    std_logic                     := 'X';             -- clk
			system_pll_ref_reset_reset         : in    std_logic                     := 'X';             -- reset
			vexriscvavalon_0_jtag_tms          : in    std_logic                     := 'X';             -- tms
			vexriscvavalon_0_jtag_tdi          : in    std_logic                     := 'X';             -- tdi
			vexriscvavalon_0_jtag_tdo          : out   std_logic;                                        -- tdo
			vexriscvavalon_0_jtag_tck          : in    std_logic                     := 'X';             -- tck
			vga_CLK                            : out   std_logic;                                        -- CLK
			vga_HS                             : out   std_logic;                                        -- HS
			vga_VS                             : out   std_logic;                                        -- VS
			vga_BLANK                          : out   std_logic;                                        -- BLANK
			vga_SYNC                           : out   std_logic;                                        -- SYNC
			vga_R                              : out   std_logic_vector(3 downto 0);                     -- R
			vga_G                              : out   std_logic_vector(3 downto 0);                     -- G
			vga_B                              : out   std_logic_vector(3 downto 0);                     -- B
			video_pll_ref_clk_clk              : in    std_logic                     := 'X';             -- clk
			video_pll_ref_reset_reset          : in    std_logic                     := 'X'              -- reset
		);
	end component Computer_System;

